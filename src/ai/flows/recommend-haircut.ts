// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A haircut recommendation AI agent.
 *
 * - recommendHaircut - A function that handles the haircut recommendation process.
 * - RecommendHaircutInput - The input type for the recommendHaircut function.
 * - RecommendHaircutOutput - The return type for the recommendHaircut function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendHaircutInputSchema = z.object({
  faceShape: z
    .string()
    .describe('The shape of the user\'s face (e.g., round, square, oval).'),
  hairType: z.string().describe('The type of the user\'s hair (e.g., straight, curly, wavy).'),
  stylePreference: z
    .string()
    .optional()
    .describe('Optional: The user\'s general style preference (e.g., modern, classic, trendy).'),
  customerReferenceDescription: z
    .string()
    .optional()
    .describe("Optional: A description of a specific hairstyle the customer likes or is referencing."),
  // customerReferenceImage: z.string().optional().describe("Optional: A photo of a hairstyle the customer likes, as a data URI. Expected format: 'data:<mimetype>;base64,<encoded_data>'.")
});
export type RecommendHaircutInput = z.infer<typeof RecommendHaircutInputSchema>;

const RecommendHaircutOutputSchema = z.object({
  recommendedHaircut: z
    .string()
    .describe('The name of the recommended haircut style. This name should ideally match one of the known styles such as "Undercut", "Pompadour", "Fade Klasik", "French Crop", etc. if applicable.'),
  description: z
    .string()
    .describe('A detailed description of the recommended haircut style and why it suits the user. (Primarily Indonesian)'),
  suitabilityExplanation: z
    .string()
    .describe('An explanation of why the recommended haircut suits the user\'s face shape and hair type, considering any customer reference. (Primarily Indonesian)'),
});

export type RecommendHaircutOutput = z.infer<typeof RecommendHaircutOutputSchema>;

export async function recommendHaircut(input: RecommendHaircutInput): Promise<RecommendHaircutOutput> {
  return recommendHaircutFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendHaircutPrompt',
  input: {schema: RecommendHaircutInputSchema},
  output: {schema: RecommendHaircutOutputSchema},
  prompt: `You are an expert barber specializing in recommending haircuts based on face shape, hair type, and customer preferences.
Your primary language for interaction is Indonesian. However, if the style preference or other inputs suggest the user is communicating in English, you can provide descriptions in English for the style name, but keep descriptions and explanations in Indonesian.

A customer is looking for a haircut recommendation. Here is their information:
Face Shape: {{{faceShape}}}
Hair Type: {{{hairType}}}
{{#if stylePreference}}General Style Preference: {{{stylePreference}}}{{/if}}
{{#if customerReferenceDescription}}Customer's Desired Style Description: {{{customerReferenceDescription}}}{{/if}}
{{!-- {{#if customerReferenceImage}}Customer Reference Image: {{media url=customerReferenceImage}}{{/if}} --}}

Consider current Indonesian hair trends for men.

Based on this information, recommend a haircut.
Your main goal is to recommend a style that suits their face shape and hair type.
If the user provided a "Customer's Desired Style Description", analyze it. If it's a known style, confirm it and use its common name (e.g., "Pompadour", "French Crop"). If it's a general idea, interpret it.
Explain how that style can be adapted for them, or if it's suitable as is. If their referenced style is not suitable, gently explain why and suggest a more suitable alternative that might capture elements of what they liked or aligns with their general style preference if provided.
If they only provided a general style preference (and no specific description), use that to guide your recommendation.
If they provided neither a specific description nor a general style preference, make a general recommendation based on face shape and hair type.

Provide a detailed description of the recommended haircut style and explain its suitability.
Prioritize Indonesian for the 'description' and 'suitabilityExplanation' fields in your JSON output.
For the 'recommendedHaircut' field, provide the name of the style. If it's a commonly known style (e.g., "Undercut", "Fade Klasik", "Buzz Cut", "Comma Hair"), please use that exact, recognizable name. The name can be in English or Indonesian if the style name is commonly known that way.
Do not use double asterisks (**) for bolding in your response.

Format your output as a JSON object with the following keys:
- recommendedHaircut: The name of the recommended haircut style (use a common, recognizable name).
- description: A detailed description of the recommended haircut style.
- suitabilityExplanation: An explanation of why the recommended haircut suits the user's face shape, hair type, and how it relates to any customer reference or style preference.`,
});

const recommendHaircutFlow = ai.defineFlow(
  {
    name: 'recommendHaircutFlow',
    inputSchema: RecommendHaircutInputSchema,
    outputSchema: RecommendHaircutOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

